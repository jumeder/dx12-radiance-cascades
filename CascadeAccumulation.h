#if 0
;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: dabe4f49e103ac2f2292592771d6f4b7
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer Constants
; {
;
;   struct Constants
;   {
;
;       uint cascade;                                 ; Offset:    0
;   
;   } Constants;                                      ; Offset:    0 Size:     4
;
; }
;
; cbuffer CascadeConstants
; {
;
;   struct CascadeConstants
;   {
;
;       uint3 resolution;                             ; Offset:    0
;       float3 extends;                               ; Offset:   16
;       float3 offset;                                ; Offset:   32
;       uint2 size;                                   ; Offset:   48
;   
;   } CascadeConstants;                               ; Offset:    0 Size:    56
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; Constants                         cbuffer      NA          NA     CB0            cb0     1
; CascadeConstants                  cbuffer      NA          NA     CB1            cb1     1
; linearSampler                     sampler      NA          NA      S0             s0     1
; higherCascade                     texture     f32          2d      T0             t0     1
; currentCascade                        UAV     f32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%Constants = type { i32 }
%CascadeConstants = type { <3 x i32>, <3 x float>, <3 x float>, <2 x i32> }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %7 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %8 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %9 = extractvalue %dx.types.CBufRet.i32 %8, 0
  %10 = lshr i32 %9, 1
  %11 = add i32 %9, 1
  %12 = lshr i32 %11, 1
  %13 = add i32 %10, %9
  %14 = add i32 %12, %9
  %15 = and i32 %13, 31
  %16 = and i32 %14, 31
  %17 = shl i32 4, %15
  %18 = shl i32 2, %16
  %19 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %4, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.i32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.i32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.i32 %19, 2
  %23 = and i32 %9, 31
  %24 = lshr i32 %20, %23
  %25 = lshr i32 %21, %23
  %26 = lshr i32 %22, %23
  %27 = add nuw nsw i32 %15, 2
  %28 = lshr i32 %6, %27
  %29 = add nuw nsw i32 %16, 1
  %30 = lshr i32 %7, %29
  %31 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %4, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.i32 %31, 0
  %33 = mul i32 %30, %32
  %34 = lshr i32 %33, %27
  %35 = add i32 %34, %28
  %36 = mul i32 %25, %24
  %37 = udiv i32 %35, %36
  %38 = urem i32 %35, %36
  %39 = udiv i32 %38, %24
  %40 = mul i32 %39, %24
  %41 = mul i32 %24, %37
  %42 = mul i32 %41, %25
  %43 = add i32 %42, %40
  %44 = sub i32 %35, %43
  %45 = uitofp i32 %6 to float
  %46 = uitofp i32 %7 to float
  %47 = mul i32 %28, %17
  %48 = mul i32 %30, %18
  %49 = uitofp i32 %47 to float
  %50 = uitofp i32 %48 to float
  %51 = fadd fast float %45, 5.000000e-01
  %52 = fsub fast float %51, %49
  %53 = fadd fast float %46, 5.000000e-01
  %54 = fsub fast float %53, %50
  %55 = uitofp i32 %17 to float
  %56 = uitofp i32 %18 to float
  %57 = fdiv fast float %52, %55
  %58 = fdiv fast float %54, %56
  %59 = uitofp i32 %44 to float
  %60 = uitofp i32 %39 to float
  %61 = uitofp i32 %37 to float
  %62 = fadd fast float %59, 5.000000e-01
  %63 = fadd fast float %60, 5.000000e-01
  %64 = fadd fast float %61, 5.000000e-01
  %65 = uitofp i32 %24 to float
  %66 = uitofp i32 %25 to float
  %67 = uitofp i32 %26 to float
  %68 = fdiv fast float %62, %65
  %69 = fdiv fast float %63, %66
  %70 = fdiv fast float %64, %67
  %71 = add i32 %9, 2
  %72 = lshr i32 %71, 1
  %73 = add i32 %12, %11
  %74 = add i32 %72, %11
  %75 = and i32 %73, 31
  %76 = and i32 %74, 31
  %77 = shl i32 4, %75
  %78 = shl i32 2, %76
  %79 = and i32 %11, 31
  %80 = lshr i32 %20, %79
  %81 = lshr i32 %21, %79
  %82 = lshr i32 %22, %79
  %83 = add nuw nsw i32 %75, 2
  %84 = lshr i32 %32, %83
  %85 = uitofp i32 %80 to float
  %86 = uitofp i32 %81 to float
  %87 = uitofp i32 %82 to float
  %88 = fmul fast float %85, %68
  %89 = fmul fast float %86, %69
  %90 = fmul fast float %87, %70
  %91 = call float @dx.op.unary.f32(i32 22, float %88)  ; Frc(value)
  %92 = call float @dx.op.unary.f32(i32 22, float %89)  ; Frc(value)
  %93 = call float @dx.op.unary.f32(i32 22, float %90)  ; Frc(value)
  %94 = fadd fast float %91, -5.000000e-01
  %95 = fadd fast float %92, -5.000000e-01
  %96 = fadd fast float %93, -5.000000e-01
  %97 = fcmp fast olt float %94, 0.000000e+00
  %98 = fcmp fast olt float %95, 0.000000e+00
  %99 = fcmp fast olt float %96, 0.000000e+00
  %100 = fadd fast float %91, 5.000000e-01
  %101 = fadd fast float %92, 5.000000e-01
  %102 = fadd fast float %93, 5.000000e-01
  %103 = select i1 %97, float %100, float %94
  %104 = select i1 %98, float %101, float %95
  %105 = select i1 %99, float %102, float %96
  %106 = call float @dx.op.unary.f32(i32 27, float %88)  ; Round_ni(value)
  %107 = call float @dx.op.unary.f32(i32 27, float %89)  ; Round_ni(value)
  %108 = call float @dx.op.unary.f32(i32 27, float %90)  ; Round_ni(value)
  %109 = fadd fast float %106, -1.000000e+00
  %110 = fadd fast float %107, -1.000000e+00
  %111 = fadd fast float %108, -1.000000e+00
  %112 = select i1 %97, float %109, float %106
  %113 = select i1 %98, float %110, float %107
  %114 = select i1 %99, float %111, float %108
  %115 = uitofp i32 %77 to float
  %116 = uitofp i32 %78 to float
  %117 = fmul fast float %115, %57
  %118 = fmul fast float %116, %58
  %119 = call float @dx.op.binary.f32(i32 35, float %112, float 0.000000e+00)  ; FMax(a,b)
  %120 = call float @dx.op.binary.f32(i32 35, float %113, float 0.000000e+00)  ; FMax(a,b)
  %121 = call float @dx.op.binary.f32(i32 35, float %114, float 0.000000e+00)  ; FMax(a,b)
  %122 = call float @dx.op.binary.f32(i32 36, float %119, float %85)  ; FMin(a,b)
  %123 = call float @dx.op.binary.f32(i32 36, float %120, float %86)  ; FMin(a,b)
  %124 = call float @dx.op.binary.f32(i32 36, float %121, float %87)  ; FMin(a,b)
  %125 = fptoui float %122 to i32
  %126 = fptoui float %123 to i32
  %127 = fptoui float %124 to i32
  %128 = mul i32 %127, %81
  %129 = add i32 %128, %126
  %130 = mul i32 %129, %80
  %131 = add i32 %130, %125
  %132 = urem i32 %131, %84
  %133 = udiv i32 %131, %84
  %134 = mul i32 %132, %77
  %135 = mul i32 %133, %78
  %136 = uitofp i32 %134 to float
  %137 = uitofp i32 %135 to float
  %138 = fadd fast float %136, %117
  %139 = fadd fast float %137, %118
  %140 = extractvalue %dx.types.CBufRet.i32 %31, 1
  %141 = uitofp i32 %32 to float
  %142 = uitofp i32 %140 to float
  %143 = fdiv fast float %138, %141
  %144 = fdiv fast float %139, %142
  %145 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %143, float %144, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %146 = extractvalue %dx.types.ResRet.f32 %145, 0
  %147 = extractvalue %dx.types.ResRet.f32 %145, 1
  %148 = extractvalue %dx.types.ResRet.f32 %145, 2
  %149 = extractvalue %dx.types.ResRet.f32 %145, 3
  %150 = fadd fast float %112, 1.000000e+00
  %151 = call float @dx.op.binary.f32(i32 35, float %150, float 0.000000e+00)  ; FMax(a,b)
  %152 = call float @dx.op.binary.f32(i32 36, float %151, float %85)  ; FMin(a,b)
  %153 = fptoui float %152 to i32
  %154 = add i32 %130, %153
  %155 = urem i32 %154, %84
  %156 = udiv i32 %154, %84
  %157 = mul i32 %155, %77
  %158 = mul i32 %156, %78
  %159 = uitofp i32 %157 to float
  %160 = uitofp i32 %158 to float
  %161 = fadd fast float %159, %117
  %162 = fadd fast float %160, %118
  %163 = fdiv fast float %161, %141
  %164 = fdiv fast float %162, %142
  %165 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %163, float %164, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %166 = extractvalue %dx.types.ResRet.f32 %165, 0
  %167 = extractvalue %dx.types.ResRet.f32 %165, 1
  %168 = extractvalue %dx.types.ResRet.f32 %165, 2
  %169 = extractvalue %dx.types.ResRet.f32 %165, 3
  %170 = fadd fast float %113, 1.000000e+00
  %171 = call float @dx.op.binary.f32(i32 35, float %170, float 0.000000e+00)  ; FMax(a,b)
  %172 = call float @dx.op.binary.f32(i32 36, float %171, float %86)  ; FMin(a,b)
  %173 = fptoui float %172 to i32
  %174 = add i32 %128, %173
  %175 = mul i32 %174, %80
  %176 = add i32 %175, %125
  %177 = urem i32 %176, %84
  %178 = udiv i32 %176, %84
  %179 = mul i32 %177, %77
  %180 = mul i32 %178, %78
  %181 = uitofp i32 %179 to float
  %182 = uitofp i32 %180 to float
  %183 = fadd fast float %181, %117
  %184 = fadd fast float %182, %118
  %185 = fdiv fast float %183, %141
  %186 = fdiv fast float %184, %142
  %187 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %185, float %186, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %188 = extractvalue %dx.types.ResRet.f32 %187, 0
  %189 = extractvalue %dx.types.ResRet.f32 %187, 1
  %190 = extractvalue %dx.types.ResRet.f32 %187, 2
  %191 = extractvalue %dx.types.ResRet.f32 %187, 3
  %192 = add i32 %175, %153
  %193 = urem i32 %192, %84
  %194 = udiv i32 %192, %84
  %195 = mul i32 %193, %77
  %196 = mul i32 %194, %78
  %197 = uitofp i32 %195 to float
  %198 = uitofp i32 %196 to float
  %199 = fadd fast float %197, %117
  %200 = fadd fast float %198, %118
  %201 = fdiv fast float %199, %141
  %202 = fdiv fast float %200, %142
  %203 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %201, float %202, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %204 = extractvalue %dx.types.ResRet.f32 %203, 0
  %205 = extractvalue %dx.types.ResRet.f32 %203, 1
  %206 = extractvalue %dx.types.ResRet.f32 %203, 2
  %207 = extractvalue %dx.types.ResRet.f32 %203, 3
  %208 = fadd fast float %114, 1.000000e+00
  %209 = call float @dx.op.binary.f32(i32 35, float %208, float 0.000000e+00)  ; FMax(a,b)
  %210 = call float @dx.op.binary.f32(i32 36, float %209, float %87)  ; FMin(a,b)
  %211 = fptoui float %210 to i32
  %212 = mul i32 %211, %81
  %213 = add i32 %212, %126
  %214 = mul i32 %213, %80
  %215 = add i32 %214, %125
  %216 = urem i32 %215, %84
  %217 = udiv i32 %215, %84
  %218 = mul i32 %216, %77
  %219 = mul i32 %217, %78
  %220 = uitofp i32 %218 to float
  %221 = uitofp i32 %219 to float
  %222 = fadd fast float %220, %117
  %223 = fadd fast float %221, %118
  %224 = fdiv fast float %222, %141
  %225 = fdiv fast float %223, %142
  %226 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %224, float %225, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %227 = extractvalue %dx.types.ResRet.f32 %226, 0
  %228 = extractvalue %dx.types.ResRet.f32 %226, 1
  %229 = extractvalue %dx.types.ResRet.f32 %226, 2
  %230 = extractvalue %dx.types.ResRet.f32 %226, 3
  %231 = add i32 %214, %153
  %232 = urem i32 %231, %84
  %233 = udiv i32 %231, %84
  %234 = mul i32 %232, %77
  %235 = mul i32 %233, %78
  %236 = uitofp i32 %234 to float
  %237 = uitofp i32 %235 to float
  %238 = fadd fast float %236, %117
  %239 = fadd fast float %237, %118
  %240 = fdiv fast float %238, %141
  %241 = fdiv fast float %239, %142
  %242 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %240, float %241, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %243 = extractvalue %dx.types.ResRet.f32 %242, 0
  %244 = extractvalue %dx.types.ResRet.f32 %242, 1
  %245 = extractvalue %dx.types.ResRet.f32 %242, 2
  %246 = extractvalue %dx.types.ResRet.f32 %242, 3
  %247 = add i32 %212, %173
  %248 = mul i32 %247, %80
  %249 = add i32 %248, %125
  %250 = urem i32 %249, %84
  %251 = udiv i32 %249, %84
  %252 = mul i32 %250, %77
  %253 = mul i32 %251, %78
  %254 = uitofp i32 %252 to float
  %255 = uitofp i32 %253 to float
  %256 = fadd fast float %254, %117
  %257 = fadd fast float %255, %118
  %258 = fdiv fast float %256, %141
  %259 = fdiv fast float %257, %142
  %260 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %258, float %259, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %261 = extractvalue %dx.types.ResRet.f32 %260, 0
  %262 = extractvalue %dx.types.ResRet.f32 %260, 1
  %263 = extractvalue %dx.types.ResRet.f32 %260, 2
  %264 = extractvalue %dx.types.ResRet.f32 %260, 3
  %265 = add i32 %248, %153
  %266 = urem i32 %265, %84
  %267 = udiv i32 %265, %84
  %268 = mul i32 %266, %77
  %269 = mul i32 %267, %78
  %270 = uitofp i32 %268 to float
  %271 = uitofp i32 %269 to float
  %272 = fadd fast float %270, %117
  %273 = fadd fast float %271, %118
  %274 = fdiv fast float %272, %141
  %275 = fdiv fast float %273, %142
  %276 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %2, %dx.types.Handle %3, float %274, float %275, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %277 = extractvalue %dx.types.ResRet.f32 %276, 0
  %278 = extractvalue %dx.types.ResRet.f32 %276, 1
  %279 = extractvalue %dx.types.ResRet.f32 %276, 2
  %280 = extractvalue %dx.types.ResRet.f32 %276, 3
  %281 = fsub fast float %166, %146
  %282 = fsub fast float %167, %147
  %283 = fsub fast float %168, %148
  %284 = fsub fast float %169, %149
  %285 = fmul fast float %281, %103
  %286 = fmul fast float %282, %103
  %287 = fmul fast float %283, %103
  %288 = fmul fast float %284, %103
  %289 = fadd fast float %285, %146
  %290 = fadd fast float %286, %147
  %291 = fadd fast float %287, %148
  %292 = fadd fast float %288, %149
  %293 = fsub fast float %204, %188
  %294 = fsub fast float %205, %189
  %295 = fsub fast float %206, %190
  %296 = fsub fast float %207, %191
  %297 = fmul fast float %293, %103
  %298 = fmul fast float %294, %103
  %299 = fmul fast float %295, %103
  %300 = fmul fast float %296, %103
  %301 = fsub fast float %243, %227
  %302 = fsub fast float %244, %228
  %303 = fsub fast float %245, %229
  %304 = fsub fast float %246, %230
  %305 = fmul fast float %301, %103
  %306 = fmul fast float %302, %103
  %307 = fmul fast float %303, %103
  %308 = fmul fast float %304, %103
  %309 = fadd fast float %305, %227
  %310 = fadd fast float %306, %228
  %311 = fadd fast float %307, %229
  %312 = fadd fast float %308, %230
  %313 = fsub fast float %277, %261
  %314 = fsub fast float %278, %262
  %315 = fsub fast float %279, %263
  %316 = fsub fast float %280, %264
  %317 = fmul fast float %313, %103
  %318 = fmul fast float %314, %103
  %319 = fmul fast float %315, %103
  %320 = fmul fast float %316, %103
  %321 = fsub fast float %188, %289
  %322 = fadd fast float %321, %297
  %323 = fsub fast float %189, %290
  %324 = fadd fast float %323, %298
  %325 = fsub fast float %190, %291
  %326 = fadd fast float %325, %299
  %327 = fsub fast float %191, %292
  %328 = fadd fast float %327, %300
  %329 = fmul fast float %322, %104
  %330 = fmul fast float %324, %104
  %331 = fmul fast float %326, %104
  %332 = fmul fast float %328, %104
  %333 = fadd fast float %329, %289
  %334 = fadd fast float %330, %290
  %335 = fadd fast float %331, %291
  %336 = fadd fast float %332, %292
  %337 = fsub fast float %261, %309
  %338 = fadd fast float %337, %317
  %339 = fsub fast float %262, %310
  %340 = fadd fast float %339, %318
  %341 = fsub fast float %263, %311
  %342 = fadd fast float %341, %319
  %343 = fsub fast float %264, %312
  %344 = fadd fast float %343, %320
  %345 = fmul fast float %338, %104
  %346 = fmul fast float %340, %104
  %347 = fmul fast float %342, %104
  %348 = fmul fast float %344, %104
  %349 = fsub fast float %309, %333
  %350 = fadd fast float %349, %345
  %351 = fsub fast float %310, %334
  %352 = fadd fast float %351, %346
  %353 = fsub fast float %311, %335
  %354 = fadd fast float %353, %347
  %355 = fsub fast float %312, %336
  %356 = fadd fast float %355, %348
  %357 = fmul fast float %350, %105
  %358 = fmul fast float %352, %105
  %359 = fmul fast float %354, %105
  %360 = fmul fast float %356, %105
  %361 = fadd fast float %357, %333
  %362 = fadd fast float %358, %334
  %363 = fadd fast float %359, %335
  %364 = fadd fast float %360, %336
  %365 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %1, i32 undef, i32 %6, i32 %7, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %366 = extractvalue %dx.types.ResRet.f32 %365, 0
  %367 = extractvalue %dx.types.ResRet.f32 %365, 1
  %368 = extractvalue %dx.types.ResRet.f32 %365, 2
  %369 = extractvalue %dx.types.ResRet.f32 %365, 3
  %370 = fmul fast float %361, %369
  %371 = fmul fast float %362, %369
  %372 = fmul fast float %363, %369
  %373 = fadd fast float %370, %366
  %374 = fadd fast float %371, %367
  %375 = fadd fast float %372, %368
  %376 = fmul fast float %364, %369
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %6, i32 %7, i32 undef, float %373, float %374, float %375, float %376, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!15}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 0}
!4 = !{!5, !8, !10, !13}
!5 = !{!6}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{!9}
!9 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!10 = !{!11, !12}
!11 = !{i32 0, %Constants* undef, !"", i32 0, i32 0, i32 1, i32 4, null}
!12 = !{i32 1, %CascadeConstants* undef, !"", i32 0, i32 1, i32 1, i32 56, null}
!13 = !{!14}
!14 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!15 = !{void ()* @main, !"main", null, !4, !16}
!16 = !{i32 0, i64 8192, i32 4, !17}
!17 = !{i32 8, i32 8, i32 1}

#endif

const unsigned char CascadeAccumulation[] = {
  0x44, 0x58, 0x42, 0x43, 0x27, 0xb9, 0x91, 0xd9, 0x35, 0xae, 0x14, 0xeb,
  0xad, 0x53, 0x35, 0x8f, 0xc2, 0xc4, 0x65, 0x1d, 0x01, 0x00, 0x00, 0x00,
  0xbc, 0x17, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0x34, 0x01, 0x00, 0x00, 0x80, 0x09, 0x00, 0x00, 0x9c, 0x09, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xc0, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0x44, 0x08, 0x00, 0x00, 0x60, 0x00, 0x05, 0x00, 0x11, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x2c, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x6b, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xb0, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0xe6, 0x08, 0xc0, 0xa0, 0x0c, 0xc3, 0x30, 0x10,
  0x31, 0x03, 0x70, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12,
  0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x30, 0x0c, 0xc3, 0x18, 0xe6,
  0x08, 0x10, 0x42, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43,
  0xa0, 0x19, 0x16, 0x02, 0x05, 0x49, 0x51, 0x8e, 0x41, 0x19, 0x86, 0x61,
  0x18, 0x86, 0x81, 0x96, 0xb2, 0x00, 0x83, 0x32, 0x0c, 0x83, 0x61, 0x18,
  0x06, 0x42, 0x4d, 0x19, 0x8c, 0xc1, 0xa0, 0xa7, 0x10, 0xc6, 0x60, 0x18,
  0x14, 0x15, 0xe6, 0x18, 0x14, 0xc5, 0x30, 0x0c, 0x63, 0x18, 0x06, 0x83,
  0xa6, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a,
  0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11, 0x31, 0x0c, 0xc3, 0x50, 0x88, 0x6a,
  0x50, 0x06, 0xb2, 0xe6, 0x08, 0x82, 0x62, 0x28, 0x03, 0x32, 0x0c, 0x18,
  0x65, 0x03, 0x01, 0xc3, 0x08, 0x84, 0x31, 0x53, 0x1b, 0x8c, 0x03, 0x3b,
  0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d,
  0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd8, 0x43, 0x39,
  0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b,
  0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xd0, 0x81, 0x1f, 0x80, 0x81, 0x1f,
  0xe8, 0x81, 0x1e, 0xb4, 0x43, 0x3a, 0xc0, 0xc3, 0x3c, 0xfc, 0x02, 0x3d,
  0xe4, 0x03, 0x3c, 0x94, 0x03, 0x0a, 0x86, 0x99, 0xc4, 0x60, 0x1c, 0xd8,
  0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16, 0xca, 0x01, 0x1f, 0xe8,
  0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca,
  0x61, 0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde,
  0x21, 0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e, 0xfc, 0x00, 0x0c, 0xfc,
  0x00, 0x09, 0x5c, 0x47, 0xde, 0x4c, 0x64, 0x30, 0x0e, 0xec, 0x10, 0x0e,
  0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x40, 0x0b, 0xe5, 0x80, 0x0f,
  0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f,
  0xe5, 0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e,
  0xef, 0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x40, 0x07, 0x7e, 0x00, 0x06,
  0x7e, 0x80, 0x02, 0x8e, 0xc0, 0x4b, 0x38, 0xa7, 0x91, 0x26, 0xa0, 0x99,
  0x24, 0x14, 0x0c, 0x24, 0x0e, 0x23, 0x0c, 0xc3, 0x30, 0xc2, 0x60, 0x0c,
  0x23, 0x08, 0xc3, 0x41, 0x1c, 0x20, 0x09, 0xc0, 0x40, 0x70, 0x4e, 0x23,
  0x4d, 0x40, 0x33, 0x49, 0x88, 0x20, 0xcb, 0xd2, 0xa4, 0xf3, 0x26, 0x69,
  0x8a, 0x28, 0x61, 0xf2, 0x59, 0x80, 0x79, 0x16, 0x22, 0x62, 0x27, 0x60,
  0x22, 0x50, 0x30, 0x50, 0x3a, 0x47, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x04, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x16, 0x20,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34,
  0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x79, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x13, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x67, 0x02, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0x8f, 0x05, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x0c, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0x60, 0x04, 0xa0, 0x18, 0x8a, 0xa0, 0x24,
  0x0a, 0xa1, 0xe0, 0xca, 0xa0, 0x1c, 0x4a, 0xa1, 0x40, 0x0a, 0xa8, 0xc0,
  0x0a, 0xa2, 0x58, 0x07, 0x8a, 0xbe, 0xa0, 0xd4, 0x8a, 0x8a, 0xb0, 0x11,
  0x80, 0x1a, 0xa0, 0xb5, 0x00, 0x01, 0x03, 0x28, 0x9c, 0x01, 0x20, 0x71,
  0x06, 0x80, 0xc6, 0x19, 0x00, 0x3a, 0x67, 0x00, 0x08, 0x9d, 0x01, 0x20,
  0x75, 0x06, 0x80, 0xbe, 0x19, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0xa9, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x84,
  0x21, 0x99, 0x20, 0x0c, 0xca, 0x06, 0x61, 0x20, 0x36, 0x08, 0x04, 0x41,
  0x61, 0x6c, 0x6e, 0x82, 0x30, 0x2c, 0x1b, 0x86, 0x03, 0x21, 0x26, 0x08,
  0x1f, 0x19, 0xb0, 0x41, 0x4b, 0x3b, 0x43, 0x2b, 0x93, 0x1b, 0x0a, 0x9b,
  0x1b, 0x0b, 0x23, 0x2b, 0x9b, 0x20, 0x0c, 0xcc, 0x04, 0x61, 0x68, 0x36,
  0x08, 0x44, 0xb3, 0x21, 0x21, 0x94, 0x85, 0x20, 0x06, 0x86, 0x70, 0x36,
  0x04, 0xcf, 0x04, 0x21, 0x0c, 0x3c, 0x3a, 0x63, 0x75, 0x72, 0x72, 0x65,
  0x6e, 0x74, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x13, 0x04, 0x6c,
  0xdb, 0xb0, 0x10, 0x91, 0x44, 0x10, 0x03, 0x33, 0x4d, 0x93, 0xb3, 0x21,
  0xa0, 0x26, 0x08, 0x63, 0x00, 0x06, 0x4c, 0x86, 0xde, 0xdc, 0xe6, 0xe8,
  0xc2, 0xdc, 0xe8, 0xe6, 0x26, 0x08, 0x83, 0xb3, 0x01, 0x21, 0xac, 0x8b,
  0x20, 0x06, 0x0c, 0x98, 0x20, 0xa0, 0x81, 0x18, 0x10, 0x1a, 0x0a, 0x9b,
  0x1b, 0x0b, 0x23, 0x2b, 0x1b, 0x7a, 0x73, 0x9b, 0xa3, 0x0b, 0x73, 0xa3,
  0x9b, 0x9b, 0x20, 0x0c, 0xcf, 0x06, 0x64, 0xd0, 0x36, 0x62, 0x18, 0x38,
  0x60, 0x83, 0x90, 0x75, 0x13, 0x04, 0x35, 0x18, 0x03, 0x36, 0x6c, 0x69,
  0x6e, 0x65, 0x61, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x1b,
  0x10, 0xe2, 0x03, 0x03, 0x82, 0x18, 0x08, 0x60, 0x43, 0x10, 0x06, 0x1b,
  0x08, 0xa8, 0xf2, 0xc4, 0x60, 0x82, 0x20, 0x06, 0x1f, 0x8f, 0xb1, 0xb0,
  0xb9, 0xb1, 0x30, 0xb2, 0xb2, 0x09, 0xc2, 0x00, 0x4d, 0x10, 0x86, 0x68,
  0x82, 0x30, 0x48, 0x1b, 0x0c, 0xa4, 0x0c, 0xcc, 0x80, 0x38, 0x03, 0x34,
  0xd8, 0x20, 0x60, 0x69, 0x30, 0x41, 0x38, 0x83, 0x30, 0xa0, 0x22, 0x57,
  0x36, 0xf7, 0xc6, 0x56, 0x47, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0xc0, 0xb8,
  0x0d, 0x08, 0xc2, 0x06, 0x66, 0x40, 0x9c, 0x01, 0x1a, 0x34, 0x6d, 0xc0,
  0xa3, 0x0c, 0x8f, 0xae, 0xcc, 0x8d, 0x6c, 0x6e, 0x82, 0x30, 0x4c, 0x1b,
  0x0c, 0xe4, 0x0d, 0xcc, 0x00, 0x0e, 0xce, 0xa0, 0xa1, 0xf1, 0x66, 0x66,
  0x36, 0x57, 0x46, 0x37, 0x41, 0x18, 0xa8, 0x0d, 0x06, 0x22, 0x07, 0x66,
  0x30, 0x07, 0x67, 0xd0, 0x90, 0x98, 0x4b, 0xd3, 0x2b, 0x9b, 0x20, 0x0c,
  0xd5, 0x06, 0x04, 0xa9, 0x03, 0x33, 0xb0, 0x83, 0x33, 0x40, 0x83, 0xa6,
  0x0d, 0x36, 0x14, 0x9c, 0x1b, 0xc4, 0x01, 0x1d, 0xdc, 0xc1, 0x86, 0x82,
  0x20, 0x03, 0x35, 0x58, 0x03, 0x3c, 0x98, 0x20, 0x08, 0xc0, 0x06, 0x60,
  0xc3, 0x40, 0xec, 0xc1, 0x1e, 0x6c, 0x08, 0xf8, 0x60, 0xc3, 0x30, 0xe8,
  0x41, 0x1f, 0x90, 0x68, 0x0b, 0x4b, 0x73, 0x9b, 0x20, 0xac, 0x41, 0x37,
  0x41, 0x18, 0xac, 0x0d, 0x43, 0x28, 0x84, 0xc2, 0xb0, 0x81, 0x20, 0x40,
  0x01, 0x13, 0x85, 0x0d, 0x85, 0x1e, 0xfc, 0x01, 0x30, 0x06, 0xa3, 0x40,
  0xc3, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0x6e, 0x82, 0x30, 0x5c, 0x2c, 0xd2,
  0xdc, 0xe6, 0xe8, 0xe6, 0x26, 0x08, 0x03, 0x46, 0x22, 0xcd, 0x8d, 0x6e,
  0x6e, 0x82, 0x30, 0x64, 0x44, 0xe8, 0xca, 0xf0, 0xbe, 0xd8, 0xde, 0xc2,
  0xc8, 0x88, 0xd0, 0x95, 0xe1, 0x7d, 0xb9, 0xbd, 0xc9, 0xb5, 0x31, 0xa1,
  0x2b, 0xc3, 0xfb, 0x9a, 0xa3, 0x7b, 0x93, 0x2b, 0x63, 0x51, 0x97, 0xe6,
  0x46, 0x37, 0x37, 0x41, 0x18, 0xb4, 0x0d, 0x4e, 0x29, 0x98, 0xc2, 0x29,
  0xa0, 0x42, 0x2a, 0xa8, 0xc2, 0x2a, 0x0c, 0xac, 0x10, 0x0a, 0xad, 0x30,
  0xb8, 0xc2, 0x2b, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b,
  0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4,
  0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32, 0x3c, 0x17, 0xbb,
  0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x41, 0x51, 0x87, 0x0c, 0xcf, 0x65,
  0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a,
  0x80, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b,
  0x2b, 0x9b, 0x9b, 0x12, 0x88, 0x41, 0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c,
  0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7,
  0xb9, 0x29, 0x02, 0x1e, 0xf4, 0x41, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37,
  0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0xc1, 0x28,
  0x74, 0x21, 0xc3, 0x73, 0x19, 0x7b, 0xab, 0x73, 0xa3, 0x2b, 0x93, 0x9b,
  0x9b, 0x12, 0xbc, 0x02, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x56, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80,
  0x34, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0xdb, 0xc1, 0x36, 0x5c, 0xbe, 0xf3,
  0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01,
  0x08, 0x98, 0x8f, 0xdc, 0xb6, 0x21, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06, 0xd5, 0x70,
  0xf9, 0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x44, 0x49, 0x54, 0xc4, 0xe2,
  0x17, 0xb7, 0x6d, 0x02, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35,
  0x51, 0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x03, 0xd6, 0x70,
  0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44,
  0xf8, 0xc5, 0x6d, 0x5b, 0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11,
  0x11, 0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x46, 0xf0, 0x0c, 0x97, 0xef,
  0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03,
  0x20, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xda, 0xbe, 0x4f, 0x49,
  0xe1, 0x03, 0xac, 0x2f, 0x22, 0x92, 0x59, 0x27, 0x71, 0xd6, 0xf4, 0xb7,
  0x44, 0x58, 0x49, 0x4c, 0x18, 0x0e, 0x00, 0x00, 0x60, 0x00, 0x05, 0x00,
  0x86, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff,
  0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xb0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0xe6, 0x08, 0xc0, 0xa0,
  0x0c, 0xc3, 0x30, 0x10, 0x31, 0x03, 0x70, 0xd3, 0x70, 0xf9, 0x13, 0xf6,
  0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x30,
  0x0c, 0xc3, 0x18, 0xe6, 0x08, 0x10, 0x42, 0xee, 0x19, 0x2e, 0x7f, 0xc2,
  0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x49, 0x51, 0x8e,
  0x41, 0x19, 0x86, 0x61, 0x18, 0x86, 0x81, 0x96, 0xb2, 0x00, 0x83, 0x32,
  0x0c, 0x83, 0x61, 0x18, 0x06, 0x42, 0x4d, 0x19, 0x8c, 0xc1, 0xa0, 0xa7,
  0x10, 0xc6, 0x60, 0x18, 0x14, 0x15, 0xe6, 0x18, 0x14, 0xc5, 0x30, 0x0c,
  0x63, 0x18, 0x06, 0x83, 0xa6, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90,
  0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11, 0x31, 0x0c,
  0xc3, 0x50, 0x88, 0x6a, 0x50, 0x06, 0xb2, 0xe6, 0x08, 0x82, 0x62, 0x28,
  0x03, 0x32, 0x0c, 0x18, 0x65, 0x03, 0x01, 0xc3, 0x08, 0x84, 0x31, 0x53,
  0x1b, 0x8c, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xd0, 0x42,
  0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02,
  0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81,
  0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xd0, 0x81,
  0x1f, 0x80, 0x81, 0x1f, 0xe8, 0x81, 0x1e, 0xb4, 0x43, 0x3a, 0xc0, 0xc3,
  0x3c, 0xfc, 0x02, 0x3d, 0xe4, 0x03, 0x3c, 0x94, 0x03, 0x0a, 0x86, 0x99,
  0xc4, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x80, 0x16,
  0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14,
  0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0x81, 0x0f,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x81, 0x0d, 0xc0, 0x80, 0x0e,
  0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x09, 0x5c, 0x47, 0xde, 0x4c, 0x64, 0x30,
  0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x40,
  0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40,
  0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0,
  0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x40,
  0x07, 0x7e, 0x00, 0x06, 0x7e, 0x80, 0x02, 0x8e, 0xc0, 0x4b, 0x38, 0xa7,
  0x91, 0x26, 0xa0, 0x99, 0x24, 0x14, 0x0c, 0x24, 0x0e, 0x23, 0x0c, 0xc3,
  0x30, 0xc2, 0x60, 0x0c, 0x23, 0x08, 0xc3, 0x41, 0x1c, 0x20, 0x09, 0xc0,
  0x40, 0x70, 0x4e, 0x23, 0x4d, 0x40, 0x33, 0x49, 0x88, 0x20, 0xcb, 0xd2,
  0xa4, 0xf3, 0x26, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x59, 0x80, 0x79, 0x16,
  0x22, 0x62, 0x27, 0x60, 0x22, 0x50, 0x30, 0x50, 0x3a, 0x47, 0x00, 0x0a,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x16, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x13, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x02, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x05, 0x04, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0c, 0x08, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x1a, 0x4a, 0x60, 0x04, 0xa0,
  0x18, 0x8a, 0xa0, 0x24, 0x0a, 0xa1, 0xe0, 0x0a, 0x82, 0xb0, 0x11, 0x00,
  0x5a, 0x0b, 0x10, 0x30, 0x80, 0xc2, 0x19, 0x00, 0x1a, 0x67, 0x00, 0x08,
  0x9d, 0x01, 0x20, 0x75, 0x06, 0x80, 0xbe, 0x19, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0x21, 0x99, 0x20, 0x0c, 0xca, 0x06, 0x61, 0x20,
  0x26, 0x08, 0xc3, 0xb2, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0xdf, 0x45, 0x60, 0x82, 0x30, 0x30, 0x13, 0x84,
  0xa1, 0xd9, 0x20, 0x10, 0xcd, 0x86, 0x84, 0x50, 0x16, 0x82, 0x18, 0x18,
  0xc2, 0xd9, 0x10, 0x3c, 0x13, 0x84, 0x30, 0x98, 0x26, 0x08, 0x58, 0xb4,
  0x61, 0x21, 0xa2, 0x85, 0x20, 0x06, 0x46, 0x92, 0x24, 0x67, 0x43, 0x30,
  0x4d, 0x10, 0xc6, 0x80, 0x9a, 0x20, 0x0c, 0xce, 0x06, 0x84, 0xa8, 0x16,
  0x82, 0x18, 0x2c, 0x60, 0x82, 0x80, 0x06, 0xd5, 0x04, 0x61, 0x78, 0x36,
  0x20, 0x03, 0xb6, 0x10, 0xc3, 0x90, 0x01, 0x1b, 0x84, 0x4b, 0x9b, 0x20,
  0xa8, 0x81, 0xb5, 0x01, 0x21, 0xb8, 0x85, 0x20, 0x06, 0x02, 0xd8, 0x10,
  0x74, 0x1b, 0x08, 0x88, 0xda, 0xbc, 0x09, 0x82, 0x00, 0x90, 0x68, 0x0b,
  0x4b, 0x73, 0x9b, 0x20, 0xac, 0x81, 0x34, 0x41, 0x18, 0xa0, 0x0d, 0xc3,
  0x18, 0x8c, 0xc1, 0xb0, 0x81, 0x20, 0xc4, 0xc0, 0x22, 0x83, 0x0d, 0x05,
  0x18, 0x84, 0x01, 0xf0, 0x95, 0x41, 0x15, 0x36, 0x36, 0xbb, 0x36, 0x97,
  0x34, 0xb2, 0x32, 0x37, 0xba, 0x29, 0x41, 0x50, 0x85, 0x0c, 0xcf, 0xc5,
  0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x40, 0x34, 0x21, 0xc3,
  0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12, 0x18, 0x75, 0xc8,
  0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca,
  0xd8, 0xa6, 0x04, 0x48, 0x19, 0x32, 0x3c, 0x17, 0xb9, 0xb2, 0xb9, 0xb7,
  0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29, 0x81, 0x57, 0x87, 0x0c, 0xcf, 0xa5,
  0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a,
  0x50, 0x06, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x56, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0xdb, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15,
  0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x8f, 0xdc,
  0xb6, 0x21, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11,
  0x21, 0xd0, 0x0c, 0x0b, 0x61, 0x06, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4b,
  0x00, 0xf3, 0x2c, 0x44, 0x49, 0x54, 0xc4, 0xe2, 0x17, 0xb7, 0x6d, 0x02,
  0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a,
  0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x03, 0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f,
  0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8, 0xc5, 0x6d, 0x5b,
  0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11, 0xc0, 0x20, 0x0e,
  0x3e, 0x72, 0xdb, 0x46, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00,
  0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x34, 0xcc, 0x00, 0x14,
  0x5f, 0xf9, 0x94, 0x51, 0x21, 0x95, 0x5c, 0xd9, 0x15, 0x4b, 0xd9, 0x94,
  0x6e, 0x40, 0x19, 0x14, 0x61, 0x40, 0x19, 0x06, 0x10, 0x52, 0x1e, 0x65,
  0x30, 0x02, 0x50, 0x02, 0x45, 0x40, 0xc6, 0x18, 0x01, 0x08, 0x82, 0x20,
  0xfe, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xbf, 0x30, 0x46, 0x00, 0x82,
  0x20, 0x08, 0xff, 0xc2, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0xcd, 0x00,
  0x8c, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x90, 0xa1,
  0xc1, 0x84, 0x98, 0x81, 0x19, 0x7c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x90, 0xa5, 0x01, 0xa5, 0x9c, 0xc1, 0x19, 0x80, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x64, 0x6a, 0x50, 0x31, 0x68, 0x80, 0x06, 0x61, 0x30,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xd9, 0x1a, 0x58, 0x8a, 0x1a, 0xa8,
  0x81, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41, 0xc6, 0x06, 0xd7,
  0xa2, 0x06, 0x6a, 0x30, 0x06, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x40,
  0xd0, 0x01, 0xb5, 0x06, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x40, 0xd4,
  0x41, 0xd5, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x60, 0xc1, 0x41,
  0x36, 0xb4, 0xc1, 0x68, 0x42, 0x00, 0x54, 0x00, 0x07, 0x58, 0x42, 0x1c,
  0x40, 0x05, 0x72, 0x80, 0x35, 0x10, 0x50, 0x42, 0x01, 0x25, 0x90, 0x81,
  0x96, 0x50, 0x06, 0x5a, 0x72, 0x20, 0x5c, 0xd5, 0x81, 0x70, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0x60, 0xed, 0x01, 0x19, 0x3c, 0x78, 0x30, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xe5, 0xb0, 0x81,
  0x16, 0x11, 0x60, 0x11, 0x02, 0x16, 0x31, 0xa0, 0x31, 0x7e, 0x00, 0x83,
  0xb2, 0x02, 0xb4, 0x66, 0x14, 0x60, 0x50, 0x57, 0x80, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x60, 0x9d, 0x02, 0x1c, 0x6c, 0x6c, 0x30, 0x9a, 0x10,
  0x00, 0x35, 0x04, 0x52, 0xc1, 0x81, 0x15, 0x1c, 0x50, 0x0b, 0x23, 0x25,
  0x04, 0x53, 0x83, 0x50, 0x15, 0x3c, 0x53, 0x01, 0x24, 0x15, 0x11, 0x52,
  0x41, 0x24, 0x15, 0x0c, 0x50, 0x49, 0x10, 0x77, 0x06, 0x46, 0xdd, 0x19,
  0x18, 0x55, 0x93, 0x27, 0x25, 0x79, 0x72, 0x82, 0x51, 0x27, 0x18, 0x65,
  0x46, 0x1d, 0xc0, 0xc7, 0x82, 0x21, 0x3e, 0x76, 0xdc, 0x01, 0x7c, 0x2c,
  0x20, 0xe2, 0x73, 0x66, 0x60, 0xd4, 0x99, 0x81, 0x51, 0x56, 0x08, 0xf4,
  0x31, 0x42, 0xa0, 0xcf, 0x3d, 0x46, 0x5d, 0x65, 0xd4, 0x61, 0x46, 0xd9,
  0x00, 0x0a, 0xf0, 0xb1, 0x21, 0x14, 0xe0, 0x63, 0x83, 0x28, 0xc0, 0xe7,
  0xd2, 0xc0, 0xa8, 0x4b, 0x03, 0xa3, 0x2e, 0x0d, 0x8c, 0x32, 0x63, 0xa0,
  0x8f, 0x19, 0x03, 0x7d, 0xcc, 0x18, 0xe8, 0x53, 0x7e, 0xa0, 0x0e, 0x50,
  0x81, 0x3b, 0x60, 0xf5, 0x81, 0x1f, 0x40, 0x09, 0x7f, 0x00, 0x25, 0x80,
  0x83, 0x96, 0x10, 0x0e, 0x5a, 0xee, 0x20, 0x5c, 0xc5, 0x83, 0x70, 0x45,
  0x0a, 0xe4, 0xa0, 0xc5, 0x07, 0x01, 0x16, 0x1f, 0x08, 0x58, 0x7c, 0x30,
  0xa0, 0x21, 0xf6, 0x00, 0x83, 0xa2, 0x83, 0x00, 0xaf, 0x30, 0xea, 0x0a,
  0xa3, 0xae, 0x30, 0xca, 0x06, 0x4a, 0x3e, 0x36, 0x50, 0xf2, 0xb1, 0x81,
  0x92, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c, 0x26, 0xb1, 0x0e,
  0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c, 0x27, 0xc1, 0x0e, 0xc3,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c, 0x28, 0xd1, 0x0e, 0x83, 0x0d,
  0xe1, 0x00, 0x1f, 0x1b, 0xc4, 0x01, 0x3e, 0x36, 0x8c, 0x03, 0x7c, 0x86,
  0x23, 0x86, 0x70, 0x20, 0xbe, 0xe1, 0x88, 0x41, 0x1c, 0x88, 0x6f, 0x38,
  0x62, 0x18, 0x07, 0xe2, 0xb3, 0xc4, 0x1c, 0xe0, 0x63, 0xc9, 0x39, 0xc0,
  0xc7, 0x12, 0x74, 0x80, 0xcf, 0x74, 0xc3, 0x90, 0x18, 0xd3, 0x0d, 0x43,
  0x62, 0x4c, 0x37, 0x0c, 0x89, 0x31, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x4f, 0x4d, 0xe4, 0x83, 0x34, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x8f,
  0x4d, 0xe8, 0x83, 0x34, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcf, 0x4d,
  0xec, 0x83, 0x64, 0x43, 0x3c, 0xc0, 0xc7, 0x06, 0x79, 0x80, 0x8f, 0x0d,
  0xf3, 0x00, 0x9f, 0xe9, 0x86, 0xc1, 0x78, 0xa6, 0x1b, 0x06, 0xe3, 0x99,
  0x6e, 0x18, 0x8c, 0xe7, 0xcc, 0xc0, 0xa8, 0x33, 0x03, 0xa3, 0x4c, 0xe0,
  0x03, 0xf9, 0x98, 0xc0, 0x07, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x28, 0x2c, 0x56, 0xe2, 0xb8, 0x87, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0x88, 0xc4, 0x82, 0x25, 0x0e, 0x7c, 0x18, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x83, 0x68, 0x2c, 0x5a, 0xe2, 0xc8, 0x87, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0x88, 0xc8, 0xa2, 0x25, 0x86, 0x32, 0x18, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x83, 0xa8, 0x2c, 0x5c, 0x62, 0x28, 0x83, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0x88, 0xcc, 0xe2, 0x25, 0x86, 0x32, 0xb8, 0x61, 0x98,
  0x1b, 0x86, 0xb9, 0x61, 0x98, 0x0a, 0xde, 0x40, 0x2a, 0x18, 0xa0, 0x02,
  0x39, 0x90, 0x0a, 0x0c, 0xa8, 0x00, 0x0e, 0xaa, 0x84, 0x38, 0x98, 0x12,
  0xf2, 0x40, 0x4a, 0xc8, 0x03, 0x39, 0xc1, 0xa8, 0x13, 0x8c, 0x32, 0xa1,
  0x82, 0x8f, 0x09, 0x15, 0x7c, 0x46, 0x13, 0xda, 0x21, 0xb8, 0x76, 0x30,
  0xea, 0x04, 0xa3, 0xac, 0x10, 0xe8, 0x63, 0x85, 0x40, 0x9f, 0x11, 0x83,
  0x07, 0x00, 0x41, 0x30, 0x98, 0xf4, 0xe2, 0x2c, 0x5e, 0xc2, 0x25, 0x84,
  0x40, 0x26, 0x64, 0xc2, 0x2e, 0xec, 0x02, 0x2d, 0x62, 0x62, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0xc1,
  0xcc, 0x60, 0x27, 0xe0, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x51,
  0x68, 0xac, 0x45, 0x70, 0x13, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10,
  0x89, 0xc6, 0x5a, 0x04, 0xa3, 0x70, 0xc1, 0x30, 0x85, 0x05, 0x50, 0xc1,
  0x29, 0x54, 0x09, 0xa8, 0x30, 0x25, 0xc0, 0x82, 0x94, 0x00, 0x0b, 0x72,
  0x82, 0x51, 0x27, 0x18, 0x65, 0x02, 0x1b, 0xc0, 0xc7, 0x04, 0x36, 0x80,
  0x8f, 0x09, 0x16, 0x7d, 0x4c, 0xb0, 0xe8, 0x33, 0x62, 0xf0, 0x00, 0x20,
  0x08, 0x06, 0x93, 0x6b, 0xec, 0xc5, 0x58, 0x88, 0x85, 0x10, 0x98, 0x85,
  0x59, 0xa8, 0x86, 0x6a, 0xf0, 0x45, 0x59, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x58, 0x1e, 0xbc,
  0x05, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0xaa, 0x8d, 0xbf,
  0x08, 0xd6, 0x62, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x22, 0xdb, 0xf8,
  0x8b, 0xc0, 0x16, 0x2e, 0x18, 0xa6, 0xdc, 0x20, 0x80, 0x0a, 0x7e, 0x41,
  0x2a, 0x98, 0x03, 0xa8, 0xa0, 0x17, 0xaa, 0x04, 0x5f, 0x98, 0x12, 0xcc,
  0x41, 0x4a, 0x30, 0x07, 0x39, 0xc1, 0xa8, 0x13, 0x8c, 0x32, 0x41, 0x14,
  0xe0, 0x63, 0x82, 0x28, 0xc0, 0xc7, 0x04, 0x36, 0xa0, 0x8f, 0x09, 0x6c,
  0x40, 0x9f, 0x11, 0x83, 0x07, 0x00, 0x41, 0x30, 0x98, 0xc8, 0x23, 0x36,
  0xf2, 0x02, 0x2f, 0x84, 0x80, 0x2f, 0xf8, 0x02, 0x3c, 0xc0, 0x43, 0x36,
  0xf6, 0x62, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10,
  0x46, 0x13, 0x88, 0xa1, 0xa2, 0x33, 0x80, 0x0a, 0xda, 0xa1, 0x4a, 0x70,
  0x87, 0x29, 0xc1, 0x1e, 0xa4, 0x04, 0x7b, 0x90, 0x13, 0x8c, 0x3a, 0xc1,
  0x28, 0x13, 0x64, 0x01, 0x3e, 0x26, 0xc8, 0x02, 0x7c, 0x4c, 0xe0, 0x03,
  0xfa, 0x98, 0xc0, 0x07, 0xf4, 0x19, 0x31, 0x78, 0x00, 0x10, 0x04, 0x83,
  0x89, 0x3e, 0xc2, 0x23, 0x35, 0x50, 0x43, 0x08, 0x58, 0x83, 0x35, 0xe0,
  0x03, 0x3e, 0xc4, 0x63, 0x35, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08,
  0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18, 0xcc, 0x17, 0x6a, 0x03, 0x3e,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0xed, 0x47, 0x79, 0x04, 0xb1,
  0x31, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x11, 0x7f, 0x94, 0x47, 0xb0,
  0x0f, 0x17, 0x0c, 0x53, 0xc1, 0x48, 0x48, 0x05, 0xb7, 0x00, 0x15, 0x98,
  0x84, 0x54, 0xa0, 0x0b, 0x50, 0x01, 0x49, 0x54, 0x09, 0x25, 0x31, 0x25,
  0xb4, 0x84, 0x94, 0xd0, 0x12, 0x72, 0x82, 0x51, 0x27, 0x18, 0x65, 0x42,
  0x3a, 0xc0, 0xc7, 0x84, 0x74, 0x80, 0x8f, 0x09, 0xb3, 0x40, 0x1f, 0x13,
  0x66, 0x81, 0x3e, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x30, 0xad, 0x08,
  0x7e, 0x80, 0xc7, 0x6f, 0x08, 0xc1, 0x78, 0x8c, 0xc7, 0x89, 0x9c, 0x48,
  0x7e, 0x88, 0xc7, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2,
  0x20, 0x8c, 0x26, 0x10, 0x43, 0x45, 0xae, 0x00, 0x15, 0xd0, 0x44, 0x95,
  0x50, 0x13, 0x53, 0x42, 0x4f, 0x48, 0x09, 0x3d, 0x21, 0x27, 0x18, 0x75,
  0x82, 0x51, 0x26, 0xe4, 0x03, 0x7c, 0x4c, 0xc8, 0x07, 0xf8, 0x98, 0x30,
  0x0e, 0xf4, 0x31, 0x61, 0x1c, 0xe8, 0x33, 0x62, 0xf0, 0x00, 0x20, 0x08,
  0x06, 0xd3, 0x8e, 0xa0, 0x08, 0x7c, 0xbc, 0x87, 0x10, 0xcc, 0xc7, 0x7c,
  0xdc, 0xc8, 0x8d, 0xa4, 0x88, 0x7c, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82,
  0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0xd4, 0x18, 0xa8, 0x02,
  0x54, 0x80, 0x16, 0x52, 0x01, 0x3f, 0x40, 0x05, 0x66, 0x51, 0x25, 0x9c,
  0xc5, 0x94, 0xf0, 0x16, 0x52, 0xc2, 0x5b, 0xc8, 0x09, 0x46, 0x9d, 0x60,
  0x94, 0x09, 0x2b, 0x01, 0x1f, 0x13, 0x56, 0x02, 0x3e, 0x26, 0xd4, 0x03,
  0x7d, 0x4c, 0xa8, 0x07, 0xfa, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1,
  0xd4, 0x26, 0x3a, 0x22, 0x22, 0x21, 0x22, 0x04, 0x25, 0x52, 0x22, 0x69,
  0x92, 0x26, 0x3b, 0x42, 0x22, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x15, 0xc1, 0x03, 0x54, 0x60,
  0x17, 0x55, 0xc2, 0x5d, 0x4c, 0x09, 0x7f, 0x21, 0x25, 0xfc, 0x85, 0x9c,
  0x60, 0xd4, 0x09, 0x46, 0x99, 0xb0, 0x13, 0xf0, 0x31, 0x61, 0x27, 0xe0,
  0x63, 0x42, 0x49, 0xd0, 0xc7, 0x84, 0x92, 0xa0, 0xcf, 0x88, 0xc1, 0x03,
  0x80, 0x20, 0x18, 0x4c, 0x7d, 0xa2, 0x26, 0x32, 0x12, 0x23, 0x42, 0x50,
  0x23, 0x35, 0x92, 0x27, 0x79, 0xb2, 0x26, 0x34, 0x32, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0xf3,
  0x70, 0x12, 0xf1, 0xb1, 0x79, 0x38, 0x89, 0xf8, 0xd8, 0x3c, 0x9c, 0x44,
  0x7c, 0x6c, 0x1e, 0x4e, 0x22, 0x3e, 0x46, 0xd8, 0x85, 0x7c, 0x8c, 0xb8,
  0x0b, 0xf9, 0x18, 0x81, 0x17, 0xf2, 0x31, 0x22, 0x2f, 0xe4, 0x63, 0xc4,
  0x4b, 0xc0, 0xc7, 0x88, 0x97, 0x80, 0x8f, 0x11, 0x2f, 0x01, 0x1f, 0x23,
  0x5e, 0x02, 0x3e, 0x96, 0x0b, 0xe9, 0x10, 0x1f, 0xcb, 0x85, 0x74, 0x88,
  0x8f, 0xe5, 0x42, 0x3a, 0xc4, 0xc7, 0x72, 0x21, 0x1d, 0xe2, 0x63, 0x84,
  0x68, 0xc8, 0xc7, 0x88, 0xd1, 0x90, 0x8f, 0x11, 0xa4, 0x21, 0x1f, 0x23,
  0x4a, 0x43, 0x3e, 0xa6, 0x07, 0xaa, 0x10, 0x1f, 0xd3, 0x03, 0x55, 0x88,
  0x8f, 0xe9, 0x81, 0x2a, 0xc4, 0xc7, 0xf4, 0x40, 0x15, 0xe2, 0x63, 0x84,
  0x6a, 0xc8, 0xc7, 0x88, 0xd5, 0x90, 0x8f, 0x11, 0xac, 0x21, 0x1f, 0x23,
  0x5a, 0x43, 0x3e, 0x46, 0xc8, 0x02, 0x7c, 0x8c, 0x90, 0x05, 0xf8, 0x18,
  0x21, 0x0b, 0xf0, 0x31, 0x42, 0x16, 0xe0, 0x63, 0x64, 0x40, 0x07, 0xf1,
  0x31, 0x32, 0xa0, 0x83, 0xf8, 0x18, 0x19, 0xd0, 0x41, 0x7c, 0x8c, 0x0c,
  0xe8, 0x20, 0x3e, 0x46, 0xd8, 0x86, 0x7c, 0x8c, 0xb8, 0x0d, 0xf9, 0x18,
  0x81, 0x1b, 0xf2, 0x31, 0x22, 0x37, 0xe4, 0x63, 0x25, 0x01, 0x06, 0xf1,
  0xb1, 0x20, 0x83, 0x8f, 0x99, 0x44, 0x18, 0xc4, 0xc7, 0x02, 0x0d, 0x3e,
  0x76, 0x12, 0x62, 0x10, 0x1f, 0x0b, 0x36, 0xf8, 0x18, 0x4a, 0x8c, 0x41,
  0x7c, 0x2c, 0xe0, 0xe0, 0x63, 0x47, 0x78, 0xc8, 0xc7, 0x0c, 0xf1, 0x90,
  0x8f, 0x15, 0xe3, 0x21, 0x1f, 0x23, 0xc8, 0x43, 0x3e, 0x46, 0xb0, 0x01,
  0x7c, 0x8c, 0x60, 0x03, 0xf8, 0x18, 0xc1, 0x06, 0xf0, 0x31, 0x82, 0x0d,
  0xe0, 0x63, 0xac, 0xc0, 0xc5, 0xc7, 0x82, 0x0a, 0x3e, 0xd6, 0x0a, 0x5d,
  0x7c, 0x2c, 0xb0, 0xe0, 0x63, 0xae, 0xe0, 0xc5, 0xc7, 0x82, 0x0b, 0x3e,
  0xf6, 0x0a, 0x5f, 0x7c, 0x2c, 0xc0, 0xe0, 0x63, 0x47, 0x7c, 0xc8, 0xc7,
  0x0c, 0xf9, 0x90, 0x8f, 0x15, 0xf3, 0x21, 0x1f, 0x23, 0xe8, 0x43, 0x3e,
  0x86, 0x06, 0x50, 0x7c, 0x2c, 0x28, 0xe0, 0x63, 0x69, 0x10, 0xc5, 0xc7,
  0x02, 0x03, 0x3e, 0xa6, 0x06, 0x52, 0x7c, 0x2c, 0x38, 0xe0, 0x63, 0x6b,
  0x30, 0xc5, 0xc7, 0x02, 0x04, 0x3e, 0x76, 0xf0, 0x87, 0x7c, 0xcc, 0xe8,
  0x0f, 0xf9, 0x58, 0xe1, 0x1f, 0xf2, 0x31, 0xe2, 0x3f, 0xe4, 0x63, 0x04,
  0x07, 0x1f, 0x23, 0x38, 0xf8, 0x18, 0xc1, 0xc1, 0xc7, 0x08, 0x0e, 0x3e,
  0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0xb0, 0xe8, 0x4c, 0xbe, 0xb0, 0x0b,
  0xc9, 0x9c, 0x8b, 0xb9, 0x90, 0x0c, 0xc9, 0x90, 0x0c, 0xc9, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31,
  0x58, 0x12, 0xc8, 0xc7, 0x12, 0x41, 0x3e, 0x96, 0x0c, 0xf2, 0xb1, 0xe1,
  0x80, 0x8f, 0x0d, 0x07, 0x7c, 0x6c, 0x38, 0xe0, 0x63, 0xcc, 0x21, 0x9f,
  0x11, 0x03, 0x07, 0x00, 0x41, 0x30, 0x68, 0xca, 0x86, 0x64, 0xf0, 0x65,
  0x5e, 0xe4, 0x05, 0x66, 0x88, 0x41, 0x08, 0x46, 0x06, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
